% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/make_play.R
\name{play}
\alias{play}
\alias{play_diffusion}
\alias{play_diffusions}
\title{Making diffusion models on networks}
\usage{
play_diffusion(
  .data,
  seeds = 1,
  thresholds = 1,
  transmissibility = 1,
  latency = 0,
  recovery = 0,
  waning = 0,
  immune = NULL,
  steps
)

play_diffusions(
  .data,
  seeds = 1,
  thresholds = 1,
  transmissibility = 1,
  latency = 0,
  recovery = 0,
  waning = 0,
  immune = NULL,
  steps,
  times = 5,
  strategy = "sequential",
  verbose = FALSE
)
}
\arguments{
\item{.data}{An object of a manynet-consistent class:
\itemize{
\item matrix (adjacency or incidence) from \code{{base}} R
\item edgelist, a data frame from \code{{base}} R or tibble from \code{{tibble}}
\item igraph, from the \code{{igraph}} package
\item network, from the \code{{network}} package
\item tbl_graph, from the \code{{tidygraph}} package
}}

\item{seeds}{A valid mark vector the length of the
number of nodes in the network.}

\item{thresholds}{A numeric vector indicating the thresholds
each node has. By default 1.
A single number means a generic threshold;
for thresholds that vary among the population please use a vector
the length of the number of nodes in the network.
If 1 or larger, the threshold is interpreted as a simple count
of the number of contacts/exposures sufficient for infection.
If less than 1, the threshold is interpreted as complex,
where the threshold concerns the proportion of contacts.}

\item{transmissibility}{The transmission rate probability,
\eqn{\beta}.
By default 1, which means any node for which the threshold is met
or exceeded will become infected.
Anything lower means a correspondingly lower probability of adoption,
even when the threshold is met or exceeded.}

\item{latency}{The inverse probability those who have been exposed
become infectious (infected), \eqn{\sigma} or \eqn{\kappa}.
For example, if exposed individuals take, on average,
four days to become infectious, then \eqn{\sigma = 0.75} (1/1-0.75 = 1/0.25 = 4).
By default 0, which means those exposed become immediately infectious (i.e. an SI model).
Anything higher results in e.g. a SEI model.}

\item{recovery}{The probability those who are infected
recover, \eqn{\gamma}.
For example, if infected individuals take, on average,
four days to recover, then \eqn{\gamma = 0.25}.
By default 0, which means there is no recovery (i.e. an SI model).
Anything higher results in an SIR model.}

\item{waning}{The probability those who are recovered
become susceptible again, \eqn{\xi}.
For example, if recovered individuals take, on average,
four days to lose their immunity, then \eqn{\xi = 0.25}.
By default 0, which means any recovered individuals retain lifelong immunity (i.e. an SIR model).
Anything higher results in e.g. a SIRS model.
\eqn{\xi = 1} would mean there is no period of immunity, e.g. an SIS model.}

\item{immune}{A logical or numeric vector identifying nodes
that begin the diffusion process as already recovered.
This could be interpreted as those who are vaccinated or equivalent.
Note however that a waning parameter will affect these nodes too.
By default NULL, indicating that no nodes begin immune.}

\item{steps}{The number of steps forward in the diffusion to play.
By default the number of nodes in the network.
If \code{steps = Inf} then the diffusion process will continue until
there are no new infections or all nodes are infected.}

\item{times}{Integer indicating number of simulations.
By default \code{times=5}, but 1,000 - 10,000 simulations recommended for publication-ready results.}

\item{strategy}{If \code{{furrr}} is installed, then multiple cores can be used to accelerate the simulations.
By default "sequential", but if multiple cores available, then "multisession" or "multicore" may be useful.
Generally this is useful only when times > 1000. See \code{{furrr}} for more.}

\item{verbose}{Whether the function should report on its progress.
By default FALSE. See {progressr} for more.}
}
\description{
These functions simulate diffusion models upon a network.
\itemize{
\item \code{play_diffusion()} runs a single simulation of a compartment model,
allowing the results to be visualised and examined.
\item \code{play_diffusions()} runs multiple simulations of a compartment model
for more robust inference.
}
}
\examples{
  smeg <- generate_smallworld(15, 0.025)
  plot(play_diffusion(smeg))
  plot(play_diffusion(smeg, recovery = 0.4))
  plot(play_diffusions(smeg, times = 20))
}
\concept{diffusion}
\concept{models}
