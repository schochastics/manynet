% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/manip_split.R
\name{split}
\alias{split}
\alias{to_egos}
\alias{to_subgraphs}
\alias{to_components}
\alias{to_waves}
\alias{to_slices}
\alias{from_subgraphs}
\alias{from_egos}
\alias{from_waves}
\alias{from_slices}
\title{Tools for splitting and joining networks, graphs, and matrices}
\usage{
to_egos(object, max_dist = 1, min_dist = 0)

to_subgraphs(object, attribute)

to_components(object)

to_waves(.data, attribute = "wave", panels = NULL)

to_slices(.data, attribute = "time", slice = NULL)

from_subgraphs(.data)

from_egos(.data)

from_waves(.data, directed = FALSE)

from_slices(.data, remove.duplicates = FALSE)
}
\arguments{
\item{max_dist}{The maximum breadth of the neighbourhood.
By default 1.}

\item{min_dist}{The minimum breadth of the neighbourhood.
By default 0.
Increasing this to 1 excludes the ego,
and 2 excludes ego's direct alters.}

\item{attribute}{One or two attributes used to slice data.}

\item{.data}{An object of a manynet-consistent class:
\itemize{
\item matrix (adjacency or incidence) from \code{{base}} R
\item edgelist, a data frame from \code{{base}} R or tibble from \code{{tibble}}
\item igraph, from the \code{{igraph}} package
\item network, from the \code{{network}} package
\item tbl_graph, from the \code{{tidygraph}} package
}}

\item{panels}{Would you like to select certain waves?
NULL by default.
That is, a list of networks for every available wave is returned.
Users can also list specific waves they want to select.}

\item{slice}{Character string or character list indicating the date(s)
or integer(s) range used to slice data (e.g slice = c(1:2, 3:4)).}

\item{remove.duplicates}{Should duplicates be removed?
By default FALSE.
If TRUE, duplicated edges are removed.}
}
\description{
These functions offer tools for splitting migraph-consistent objects
(matrices, igraph, tidygraph, or network objects).
Splitting means that the returned object will be a list of objects.
Joining expects a list of objects and returns a network object.
}
\section{Functions}{
\itemize{
\item \code{to_egos()}: Returns a list of ego (or focal)
networks.

\item \code{to_subgraphs()}: Returns a list of subgraphs
on some given node attribute.

\item \code{to_components()}: Returns a list of the components
in a network.

\item \code{to_waves()}: Returns a network
with some discrete observations over time
into a list of those observations.

\item \code{to_slices()}: Returns a list of a network
with some continuous time variable at some time slice(s).

\item \code{from_subgraphs()}: Returns a single network object
from a list of subgraphs.

\item \code{from_egos()}: Returns a single network object
from a list of egos.

\item \code{from_waves()}: Returns a single network object
from a list of waves.

\item \code{from_slices()}: Returns a single network object
from a list of slices.

}}
\examples{
autographs(to_egos(ison_adolescents))
autographs(to_egos(ison_adolescents,2))
ison_adolescents \%>\%
  activate(nodes) \%>\%
  mutate(unicorn = sample(c("yes", "no"), 8,
  replace = TRUE)) \%>\%
  to_subgraphs(attribute = "unicorn")
to_components(ison_marvel_relationships)
ison_adolescents \%>\%
  activate(edges) \%>\%
  mutate(wave = sample(1995:1998, 10, replace = TRUE)) \%>\%
  to_waves(attribute = "wave")
ison_adolescents \%>\%
  activate(edges) \%>\%
  mutate(wave = sample(1995:1998, 10, replace = TRUE)) \%>\%
  to_waves(attribute = "wave", panels = c(1995, 1996))
ison_adolescents \%>\%
  mutate_ties(time = 1:10, increment = 1) \%>\% 
  add_ties(c(1,2), list(time = 3, increment = -1)) \%>\% 
  to_slices(slice = 7)
ison_adolescents \%>\%
  activate(nodes) \%>\%
  mutate(unicorn = sample(c("yes", "no"), 8,
  replace = TRUE)) \%>\%
  to_subgraphs(attribute = "unicorn") \%>\%
  from_subgraphs()
ison_adolescents \%>\%
  activate(edges) \%>\%
  to_egos() \%>\%
  from_egos()
ison_adolescents \%>\%
  activate(edges) \%>\%
  mutate(wave = sample(1:4, 10, replace = TRUE)) \%>\%
  to_waves(attribute = "wave") \%>\%
  from_waves()
ison_adolescents \%>\%
  mutate_ties(time = 1:10, increment = 1) \%>\% 
  add_ties(c(1,2), list(time = 3, increment = -1)) \%>\% 
  to_slices(slice = c(5,7)) \%>\%
  from_slices()
}
\seealso{
Other manipulations: 
\code{\link{add}},
\code{\link{as}()},
\code{\link{grab}},
\code{\link{missing}},
\code{\link{reformat}},
\code{\link{transform}()}
}
\concept{manipulations}
