url: https://snlab-ch.github.io/manynet/
development:
    mode: auto
template:
  bootswatch: superhero
authors:
  James Hollway:
    href: https://jameshollway.com
navbar:
  structure:
    left:
    - home
    - intro
    - reference
    - news
    right:
    - search
    - github
  components:
    home:
      icon: fa-home fa-lg
      href: index.html
    reference:
      text: Function Overview
      href: reference/index.html
    news:
      text: News
      href: news/index.html
    github:
      icon: "fab fa-github fa-lg"
      href: https://github.com/snlab-ch/manynet
reference:
  - title: "Making"
    desc: |
      Functions for constructing, simulating, and importing
      directed and undirected, one-mode and two-mode networks
      into whichever class of object is desired for further analysis.
    contents:
      - starts_with("create_")
      - starts_with("generate_")
      - starts_with("read")
      - starts_with("write")
      - starts_with("as_")
  - title: "Manipulating"
    desc: |
      Functions for manipulating networks into useful formats.
      This includes functions for reformatting networks into networks
      of the same dimensions but a different type, e.g. from directed to undirected.
      It also includes functions for transforming networks into networks
      with other dimensions, such as from a two-mode network into a one-mode network.
      There are also functions for splitting networks, e.g. into a list of ego networks,
      and rejoining them from such lists.
      There are also tidy-style and igraph-style functions for adding or joining
      new data on nodes or ties to networks.
    contents:
      - starts_with("to_")
      - starts_with("from_")
      - starts_with("na_to_")
      - starts_with("add_")
      - starts_with("join_")
  - title: "Mapping"
    desc: |
      Functions for informatively describing networks.
      This includes identifying properties of networks, nodes, or ties
      as well as plotting and visualising graphs of different types.
      The `is_*()` family all return logical scalars (TRUE or FALSE).
      `network_` measures return one or, in some cases of two-mode measures,
      two values.
      All `node_` and `tie_` measures return a single vector,
      the length of the nodes or ties in the network, respectively.
      `autographr()` graphs any manynet-compatible class object automagically.
      `autographs()` and `autographd()` do the same for multiple networks
      and dynamic networks, respectively.
    contents:
      - starts_with("is_")
      - starts_with("network_")
      - starts_with("node_")
      - starts_with("autograph")
      - starts_with("layout")
      - starts_with("theme")
      - ends_with("palette")
  - title: "Data"
    desc: |
      The package contains a variety of networks useful for pedagogical purposes
      and used in the course 'Social Networks Theories and Methods' and other workshops.
      Each page documents the source of the data and its format.
      References are provided for further reading and citation.
    contents:
      - starts_with("ison_")
  - title: "Tutorials"
    desc: |
      Functions for loading and extracting code from tutorials.
    contents:
      - ends_with("_tute")
  
