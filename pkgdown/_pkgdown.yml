url: https://stocnet.github.io/manynet/
development:
    mode: auto
template:
  bootswatch: superhero
authors:
  James Hollway:
    href: https://jameshollway.com
navbar:
  structure:
    left:
    - home
    - intro
    - reference
    - news
    right:
    - search
    - github
  components:
    home:
      icon: fa-home fa-lg
      href: index.html
    reference:
      text: Function Overview
      href: reference/index.html
    news:
      text: News
      href: news/index.html
    github:
      icon: "fab fa-github fa-lg"
      href: https://github.com/stocnet/manynet
reference:
  - title: "Making"
    desc: |
      Functions for importing, exporting, constructing, and simulating
      directed and undirected, one-mode and two-mode networks.
      This includes functions for playing games upon networks,
      changing the distribution of nodal attributes.
    contents:
      - starts_with("read_")
      - starts_with("write_")
      - starts_with("create_")
      - starts_with("generate_")
      - starts_with("play_")
  - title: "Modifying"
    desc: |
      Functions for modifying networks into other classes or formats,
      or modifying their properties or attributes.
      This includes functions for reformatting networks into networks
      of the same dimensions but a different type, e.g. from directed to undirected.
      It also includes functions for transforming networks into networks
      with other dimensions, such as from a two-mode network into a one-mode network.
      There are also functions for splitting networks, e.g. into a list of ego networks,
      and rejoining them from such lists.
      There are also tidy-style and igraph-style functions for adding or joining
      new data on nodes or ties to networks.
    contents:
      - starts_with("as_")
      - starts_with("add_")
      - starts_with("to_")
      - starts_with("from_")
      - starts_with("na_to_")
  - title: "Marking"
    desc: |
      Functions for identifying properties of networks, nodes, or ties,
      all returning logical scalars or vectors.
      Note that all `node_` and `tie_` measures return a single vector
      so that they can be added directly to graph objects.
      `net_` measures return one or, in some cases of two-mode measures,
      two values.
      All `node_` and `tie_` measures return a single vector,
      the length of the nodes or ties in the network, respectively.
    contents:
      - contains("is_")
  - title: "Measuring"
    desc: |
      Functions for measuring networks and returning a numeric vector or value.
      `net_` measures return one or, in some cases of two-mode measures,
      two values.
      All `node_` and `tie_` measures return a single vector,
      the length of the nodes or ties in the network, respectively.
    contents:
      - starts_with("measure_")
      - ends_with("_centrality")
      - over
  - title: "Motifs and Memberships"
    desc: |
      Motifs are functions for calculating network subgraphs,
      always return a matrix or table of nodes as rows and motif or other property as columns,
      and can be recognised by the `_by_` in the function name.
      Memberships are functions for identifying community, cluster, or class memberships,
      always return a string vector the length of the nodes in the network,
      and can be recognised by the `_in_` in the function name.
    contents:
      - contains("_by_")
      - contains("_in_")
  - title: "Mapping"
    desc: |
      Functions for plotting and visualising graphs of different types.
      `graphr()` graphs any manynet-compatible class object automagically.
      `graphs()` and `grapht()` do the same for multiple networks
      and dynamic networks, respectively.
    contents:
      - starts_with("graph")
      - starts_with("layout")
      - starts_with("theme")
      - starts_with("scale")
      - ends_with("palettes")
  - title: "Models"
    desc: "Functions for modelling multimodal networks:"
    contents:
      - starts_with("test")
      - cluster
      - kselect
  - title: "Learning"
    desc: |
      Functions for loading and extracting code from tutorials.
      There is also a function for tabulating the various network data included in the package,
      providing an overview of their properties.
    contents:
      - ends_with("_tute")
  - title: "Practicing"
    desc: |
      The package contains a variety of networks useful for pedagogical purposes
      and used in the course 'Social Networks Theories and Methods' and other workshops.
      Each page documents the source of the data and its format.
      References are provided for further reading and citation.
    contents:
      - data_overview
      - starts_with("ison_")
  
